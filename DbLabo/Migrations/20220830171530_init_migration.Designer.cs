// <auto-generated />
using System;
using DbLabo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbLabo.Migrations
{
    [DbContext(typeof(DbConnect))]
    [Migration("20220830171530_init_migration")]
    partial class init_migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DbLabo.DbEntities.AffinityChampEntity", b =>
                {
                    b.Property<int>("IdAffinityChamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAffinityChamp"), 1L, 1);

                    b.Property<string>("Strong")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Weak")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdAffinityChamp");

                    b.ToTable("AffinityChamp", (string)null);
                });

            modelBuilder.Entity("DbLabo.DbEntities.BasicsStatisticEntity", b =>
                {
                    b.Property<int>("IdBasicsStatistic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBasicsStatistic"), 1L, 1);

                    b.Property<int>("Atk")
                        .HasColumnType("int");

                    b.Property<int>("CriticalDamage")
                        .HasColumnType("int");

                    b.Property<int>("CriticalRate")
                        .HasColumnType("int");

                    b.Property<int>("Def")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<int>("Precision")
                        .HasColumnType("int");

                    b.Property<int>("Resistor")
                        .HasColumnType("int");

                    b.Property<int>("Vit")
                        .HasColumnType("int");

                    b.HasKey("IdBasicsStatistic");

                    b.ToTable("BasicStatistic", (string)null);
                });

            modelBuilder.Entity("DbLabo.DbEntities.ChampEntity", b =>
                {
                    b.Property<int>("IdChamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdChamp"), 1L, 1);

                    b.Property<int?>("AffinityIdAffinityChamp")
                        .HasColumnType("int");

                    b.Property<int?>("BasicsStatisticsIdBasicsStatistic")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("IdChamp");

                    b.HasIndex("AffinityIdAffinityChamp");

                    b.HasIndex("BasicsStatisticsIdBasicsStatistic");

                    b.ToTable("Champ", (string)null);
                });

            modelBuilder.Entity("DbLabo.DbEntities.EquipmentEntity", b =>
                {
                    b.Property<int>("IdEquipment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipment"), 1L, 1);

                    b.Property<string>("Effect")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("NbPartsRequired")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdEquipment");

                    b.ToTable("Equipment", (string)null);
                });

            modelBuilder.Entity("DbLabo.DbEntities.SkillEntity", b =>
                {
                    b.Property<int>("IdSkill")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSkill"), 1L, 1);

                    b.Property<int?>("ChampEntityIdChamp")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Effect")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdSkill");

                    b.HasIndex("ChampEntityIdChamp");

                    b.ToTable("Skill", (string)null);
                });

            modelBuilder.Entity("DbLabo.DbEntities.UserEntity", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(384)
                        .HasColumnType("nvarchar(384)");

                    b.Property<string>("Passwd")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Rule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("SaltKey")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varbinary(16)");

                    b.HasKey("IdUser");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("DbLabo.DbEntities.ChampEntity", b =>
                {
                    b.HasOne("DbLabo.DbEntities.AffinityChampEntity", "Affinity")
                        .WithMany()
                        .HasForeignKey("AffinityIdAffinityChamp");

                    b.HasOne("DbLabo.DbEntities.BasicsStatisticEntity", "BasicsStatistics")
                        .WithMany()
                        .HasForeignKey("BasicsStatisticsIdBasicsStatistic");

                    b.Navigation("Affinity");

                    b.Navigation("BasicsStatistics");
                });

            modelBuilder.Entity("DbLabo.DbEntities.SkillEntity", b =>
                {
                    b.HasOne("DbLabo.DbEntities.ChampEntity", null)
                        .WithMany("Skills")
                        .HasForeignKey("ChampEntityIdChamp");
                });

            modelBuilder.Entity("DbLabo.DbEntities.ChampEntity", b =>
                {
                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
